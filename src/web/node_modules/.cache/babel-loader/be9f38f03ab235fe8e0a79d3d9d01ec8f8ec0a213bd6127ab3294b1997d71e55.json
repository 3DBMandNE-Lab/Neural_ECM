{"ast":null,"code":"import React,{useState,useEffect}from'react';import{Grid,Card,CardContent,Typography,Box,Paper,List,ListItem,ListItemText,ListItemIcon,Chip,CircularProgress}from'@mui/material';import{Science as ScienceIcon,CellTower as CellIcon,NetworkCheck as NetworkIcon,Analytics as AnalyticsIcon,Search as SearchIcon,TrendingUp as TrendingIcon}from'@mui/icons-material';import{PieChart,Pie,Cell,ResponsiveContainer,BarChart,Bar,XAxis,YAxis,CartesianGrid,Tooltip,Legend}from'recharts';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Dashboard=()=>{const[stats,setStats]=useState(null);const[loading,setLoading]=useState(true);const[error,setError]=useState(null);useEffect(()=>{async function loadStats(){try{const[ecmRes,cellRes]=await Promise.all([fetch(process.env.PUBLIC_URL+'/ecm_components.json'),fetch(process.env.PUBLIC_URL+'/cell_types.json')]);const ecmData=await ecmRes.json();const cellData=await cellRes.json();const ecmComponents=ecmData.ecm_components||[];const cellTypes=cellData.cell_types||[];const uniqueGenes=new Set();const uniqueProteases=new Set();let totalGenes=0;let totalProteases=0;for(const component of ecmComponents){const genes=component.genes||[];if(Array.isArray(genes)){totalGenes+=genes.length;genes.forEach(g=>uniqueGenes.add(g));}else if(typeof genes==='object'){for(const geneList of Object.values(genes)){totalGenes+=geneList.length;geneList.forEach(g=>uniqueGenes.add(g));}}const proteases=component.proteases||[];totalProteases+=proteases.length;proteases.forEach(p=>uniqueProteases.add(p));}const stats={total_ecm_components:ecmComponents.length,total_cell_types:cellTypes.length,total_genes:totalGenes,total_proteases:totalProteases,unique_proteases:Array.from(uniqueProteases),unique_genes:Array.from(uniqueGenes),unique_protease_count:uniqueProteases.size,unique_gene_count:uniqueGenes.size};setStats(stats);}catch(err){setError('Failed to load dashboard data');console.error('Error loading dashboard data:',err);}finally{setLoading(false);}}loadStats();},[]);const COLORS=['#0088FE','#00C49F','#FFBB28','#FF8042','#8884D8'];const pieData=stats?[{name:'ECM Components',value:stats.total_ecm_components},{name:'Cell Types',value:stats.total_cell_types},{name:'Unique Genes',value:stats.unique_gene_count},{name:'Unique Proteases',value:stats.unique_protease_count}]:[];const barData=stats?[{name:'ECM Components',count:stats.total_ecm_components},{name:'Cell Types',count:stats.total_cell_types},{name:'Total Genes',count:stats.total_genes},{name:'Total Proteases',count:stats.total_proteases}]:[];if(loading){return/*#__PURE__*/_jsx(Box,{display:\"flex\",justifyContent:\"center\",alignItems:\"center\",minHeight:\"400px\",children:/*#__PURE__*/_jsx(CircularProgress,{})});}if(error){return/*#__PURE__*/_jsx(Box,{className:\"error\",children:/*#__PURE__*/_jsx(Typography,{variant:\"h6\",color:\"error\",children:error})});}return/*#__PURE__*/_jsxs(Box,{children:[/*#__PURE__*/_jsx(Typography,{variant:\"h4\",gutterBottom:true,children:\"Neural ECM Dashboard\"}),/*#__PURE__*/_jsx(Typography,{variant:\"body1\",color:\"textSecondary\",paragraph:true,children:\"Welcome to the Neural Extracellular Matrix Explorer. This dashboard provides an overview of ECM components, cell types, and their interactions in the brain.\"}),/*#__PURE__*/_jsxs(Grid,{container:true,spacing:3,sx:{mb:4},children:[/*#__PURE__*/_jsx(Grid,{item:true,xs:12,sm:6,md:3,children:/*#__PURE__*/_jsx(Card,{children:/*#__PURE__*/_jsx(CardContent,{children:/*#__PURE__*/_jsxs(Box,{display:\"flex\",alignItems:\"center\",children:[/*#__PURE__*/_jsx(ScienceIcon,{color:\"primary\",sx:{mr:2,fontSize:40}}),/*#__PURE__*/_jsxs(Box,{children:[/*#__PURE__*/_jsx(Typography,{variant:\"h4\",component:\"div\",children:(stats===null||stats===void 0?void 0:stats.total_ecm_components)||0}),/*#__PURE__*/_jsx(Typography,{color:\"textSecondary\",children:\"ECM Components\"})]})]})})})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,sm:6,md:3,children:/*#__PURE__*/_jsx(Card,{children:/*#__PURE__*/_jsx(CardContent,{children:/*#__PURE__*/_jsxs(Box,{display:\"flex\",alignItems:\"center\",children:[/*#__PURE__*/_jsx(CellIcon,{color:\"primary\",sx:{mr:2,fontSize:40}}),/*#__PURE__*/_jsxs(Box,{children:[/*#__PURE__*/_jsx(Typography,{variant:\"h4\",component:\"div\",children:(stats===null||stats===void 0?void 0:stats.total_cell_types)||0}),/*#__PURE__*/_jsx(Typography,{color:\"textSecondary\",children:\"Cell Types\"})]})]})})})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,sm:6,md:3,children:/*#__PURE__*/_jsx(Card,{children:/*#__PURE__*/_jsx(CardContent,{children:/*#__PURE__*/_jsxs(Box,{display:\"flex\",alignItems:\"center\",children:[/*#__PURE__*/_jsx(AnalyticsIcon,{color:\"primary\",sx:{mr:2,fontSize:40}}),/*#__PURE__*/_jsxs(Box,{children:[/*#__PURE__*/_jsx(Typography,{variant:\"h4\",component:\"div\",children:(stats===null||stats===void 0?void 0:stats.unique_gene_count)||0}),/*#__PURE__*/_jsx(Typography,{color:\"textSecondary\",children:\"Unique Genes\"})]})]})})})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,sm:6,md:3,children:/*#__PURE__*/_jsx(Card,{children:/*#__PURE__*/_jsx(CardContent,{children:/*#__PURE__*/_jsxs(Box,{display:\"flex\",alignItems:\"center\",children:[/*#__PURE__*/_jsx(NetworkIcon,{color:\"primary\",sx:{mr:2,fontSize:40}}),/*#__PURE__*/_jsxs(Box,{children:[/*#__PURE__*/_jsx(Typography,{variant:\"h4\",component:\"div\",children:(stats===null||stats===void 0?void 0:stats.unique_protease_count)||0}),/*#__PURE__*/_jsx(Typography,{color:\"textSecondary\",children:\"Unique Proteases\"})]})]})})})})]}),/*#__PURE__*/_jsxs(Grid,{container:true,spacing:3,children:[/*#__PURE__*/_jsx(Grid,{item:true,xs:12,md:6,children:/*#__PURE__*/_jsxs(Paper,{sx:{p:3},children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",gutterBottom:true,children:\"Data Distribution\"}),/*#__PURE__*/_jsx(ResponsiveContainer,{width:\"100%\",height:300,children:/*#__PURE__*/_jsxs(PieChart,{children:[/*#__PURE__*/_jsx(Pie,{data:pieData,cx:\"50%\",cy:\"50%\",labelLine:false,label:_ref=>{let{name,percent}=_ref;return\"\".concat(name,\" \").concat((percent*100).toFixed(0),\"%\");},outerRadius:80,fill:\"#8884d8\",dataKey:\"value\",children:pieData.map((entry,index)=>/*#__PURE__*/_jsx(Cell,{fill:COLORS[index%COLORS.length]},\"cell-\".concat(index)))}),/*#__PURE__*/_jsx(Tooltip,{})]})})]})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,md:6,children:/*#__PURE__*/_jsxs(Paper,{sx:{p:3},children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",gutterBottom:true,children:\"Component Counts\"}),/*#__PURE__*/_jsx(ResponsiveContainer,{width:\"100%\",height:300,children:/*#__PURE__*/_jsxs(BarChart,{data:barData,children:[/*#__PURE__*/_jsx(CartesianGrid,{strokeDasharray:\"3 3\"}),/*#__PURE__*/_jsx(XAxis,{dataKey:\"name\"}),/*#__PURE__*/_jsx(YAxis,{}),/*#__PURE__*/_jsx(Tooltip,{}),/*#__PURE__*/_jsx(Legend,{}),/*#__PURE__*/_jsx(Bar,{dataKey:\"count\",fill:\"#1976d2\"})]})})]})})]}),/*#__PURE__*/_jsxs(Paper,{sx:{p:3,mt:3},children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",gutterBottom:true,children:\"Quick Actions\"}),/*#__PURE__*/_jsxs(List,{children:[/*#__PURE__*/_jsxs(ListItem,{children:[/*#__PURE__*/_jsx(ListItemIcon,{children:/*#__PURE__*/_jsx(SearchIcon,{})}),/*#__PURE__*/_jsx(ListItemText,{primary:\"Search ECM Components\",secondary:\"Find specific ECM components and their properties\"}),/*#__PURE__*/_jsx(Chip,{label:\"Explore\",color:\"primary\"})]}),/*#__PURE__*/_jsxs(ListItem,{children:[/*#__PURE__*/_jsx(ListItemIcon,{children:/*#__PURE__*/_jsx(CellIcon,{})}),/*#__PURE__*/_jsx(ListItemText,{primary:\"View Cell Types\",secondary:\"Explore how different cell types interact with ECM\"}),/*#__PURE__*/_jsx(Chip,{label:\"View\",color:\"primary\"})]}),/*#__PURE__*/_jsxs(ListItem,{children:[/*#__PURE__*/_jsx(ListItemIcon,{children:/*#__PURE__*/_jsx(NetworkIcon,{})}),/*#__PURE__*/_jsx(ListItemText,{primary:\"Network Analysis\",secondary:\"Visualize interaction networks between components\"}),/*#__PURE__*/_jsx(Chip,{label:\"Analyze\",color:\"primary\"})]})]})]})]});};export default Dashboard;","map":{"version":3,"names":["React","useState","useEffect","Grid","Card","CardContent","Typography","Box","Paper","List","ListItem","ListItemText","ListItemIcon","Chip","CircularProgress","Science","ScienceIcon","CellTower","CellIcon","NetworkCheck","NetworkIcon","Analytics","AnalyticsIcon","Search","SearchIcon","TrendingUp","TrendingIcon","PieChart","Pie","Cell","ResponsiveContainer","BarChart","Bar","XAxis","YAxis","CartesianGrid","Tooltip","Legend","jsx","_jsx","jsxs","_jsxs","Dashboard","stats","setStats","loading","setLoading","error","setError","loadStats","ecmRes","cellRes","Promise","all","fetch","process","env","PUBLIC_URL","ecmData","json","cellData","ecmComponents","ecm_components","cellTypes","cell_types","uniqueGenes","Set","uniqueProteases","totalGenes","totalProteases","component","genes","Array","isArray","length","forEach","g","add","geneList","Object","values","proteases","p","total_ecm_components","total_cell_types","total_genes","total_proteases","unique_proteases","from","unique_genes","unique_protease_count","size","unique_gene_count","err","console","COLORS","pieData","name","value","barData","count","display","justifyContent","alignItems","minHeight","children","className","variant","color","gutterBottom","paragraph","container","spacing","sx","mb","item","xs","sm","md","mr","fontSize","width","height","data","cx","cy","labelLine","label","_ref","percent","concat","toFixed","outerRadius","fill","dataKey","map","entry","index","strokeDasharray","mt","primary","secondary"],"sources":["/Users/kevinjoseph/Neural_ECM/src/web/src/components/Dashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  Grid,\n  Card,\n  CardContent,\n  Typography,\n  Box,\n  Paper,\n  List,\n  ListItem,\n  ListItemText,\n  ListItemIcon,\n  Chip,\n  CircularProgress\n} from '@mui/material';\nimport {\n  Science as ScienceIcon,\n  CellTower as CellIcon,\n  NetworkCheck as NetworkIcon,\n  Analytics as AnalyticsIcon,\n  Search as SearchIcon,\n  TrendingUp as TrendingIcon\n} from '@mui/icons-material';\nimport { PieChart, Pie, Cell, ResponsiveContainer, BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend } from 'recharts';\n\nconst Dashboard = () => {\n  const [stats, setStats] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    async function loadStats() {\n      try {\n        const [ecmRes, cellRes] = await Promise.all([\n          fetch(process.env.PUBLIC_URL + '/ecm_components.json'),\n          fetch(process.env.PUBLIC_URL + '/cell_types.json')\n        ]);\n        const ecmData = await ecmRes.json();\n        const cellData = await cellRes.json();\n        const ecmComponents = ecmData.ecm_components || [];\n        const cellTypes = cellData.cell_types || [];\n        const uniqueGenes = new Set();\n        const uniqueProteases = new Set();\n        let totalGenes = 0;\n        let totalProteases = 0;\n        for (const component of ecmComponents) {\n          const genes = component.genes || [];\n          if (Array.isArray(genes)) {\n            totalGenes += genes.length;\n            genes.forEach(g => uniqueGenes.add(g));\n          } else if (typeof genes === 'object') {\n            for (const geneList of Object.values(genes)) {\n              totalGenes += geneList.length;\n              geneList.forEach(g => uniqueGenes.add(g));\n            }\n          }\n          const proteases = component.proteases || [];\n          totalProteases += proteases.length;\n          proteases.forEach(p => uniqueProteases.add(p));\n        }\n        const stats = {\n          total_ecm_components: ecmComponents.length,\n          total_cell_types: cellTypes.length,\n          total_genes: totalGenes,\n          total_proteases: totalProteases,\n          unique_proteases: Array.from(uniqueProteases),\n          unique_genes: Array.from(uniqueGenes),\n          unique_protease_count: uniqueProteases.size,\n          unique_gene_count: uniqueGenes.size\n        };\n        setStats(stats);\n      } catch (err) {\n        setError('Failed to load dashboard data');\n        console.error('Error loading dashboard data:', err);\n      } finally {\n        setLoading(false);\n      }\n    }\n    loadStats();\n  }, []);\n\n  const COLORS = ['#0088FE', '#00C49F', '#FFBB28', '#FF8042', '#8884D8'];\n\n  const pieData = stats ? [\n    { name: 'ECM Components', value: stats.total_ecm_components },\n    { name: 'Cell Types', value: stats.total_cell_types },\n    { name: 'Unique Genes', value: stats.unique_gene_count },\n    { name: 'Unique Proteases', value: stats.unique_protease_count }\n  ] : [];\n\n  const barData = stats ? [\n    { name: 'ECM Components', count: stats.total_ecm_components },\n    { name: 'Cell Types', count: stats.total_cell_types },\n    { name: 'Total Genes', count: stats.total_genes },\n    { name: 'Total Proteases', count: stats.total_proteases }\n  ] : [];\n\n  if (loading) {\n    return (\n      <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\" minHeight=\"400px\">\n        <CircularProgress />\n      </Box>\n    );\n  }\n\n  if (error) {\n    return (\n      <Box className=\"error\">\n        <Typography variant=\"h6\" color=\"error\">\n          {error}\n        </Typography>\n      </Box>\n    );\n  }\n\n  return (\n    <Box>\n      <Typography variant=\"h4\" gutterBottom>\n        Neural ECM Dashboard\n      </Typography>\n      \n      <Typography variant=\"body1\" color=\"textSecondary\" paragraph>\n        Welcome to the Neural Extracellular Matrix Explorer. This dashboard provides an overview of ECM components, \n        cell types, and their interactions in the brain.\n      </Typography>\n\n      {/* Statistics Cards */}\n      <Grid container spacing={3} sx={{ mb: 4 }}>\n        <Grid item xs={12} sm={6} md={3}>\n          <Card>\n            <CardContent>\n              <Box display=\"flex\" alignItems=\"center\">\n                <ScienceIcon color=\"primary\" sx={{ mr: 2, fontSize: 40 }} />\n                <Box>\n                  <Typography variant=\"h4\" component=\"div\">\n                    {stats?.total_ecm_components || 0}\n                  </Typography>\n                  <Typography color=\"textSecondary\">\n                    ECM Components\n                  </Typography>\n                </Box>\n              </Box>\n            </CardContent>\n          </Card>\n        </Grid>\n\n        <Grid item xs={12} sm={6} md={3}>\n          <Card>\n            <CardContent>\n              <Box display=\"flex\" alignItems=\"center\">\n                <CellIcon color=\"primary\" sx={{ mr: 2, fontSize: 40 }} />\n                <Box>\n                  <Typography variant=\"h4\" component=\"div\">\n                    {stats?.total_cell_types || 0}\n                  </Typography>\n                  <Typography color=\"textSecondary\">\n                    Cell Types\n                  </Typography>\n                </Box>\n              </Box>\n            </CardContent>\n          </Card>\n        </Grid>\n\n        <Grid item xs={12} sm={6} md={3}>\n          <Card>\n            <CardContent>\n              <Box display=\"flex\" alignItems=\"center\">\n                <AnalyticsIcon color=\"primary\" sx={{ mr: 2, fontSize: 40 }} />\n                <Box>\n                  <Typography variant=\"h4\" component=\"div\">\n                    {stats?.unique_gene_count || 0}\n                  </Typography>\n                  <Typography color=\"textSecondary\">\n                    Unique Genes\n                  </Typography>\n                </Box>\n              </Box>\n            </CardContent>\n          </Card>\n        </Grid>\n\n        <Grid item xs={12} sm={6} md={3}>\n          <Card>\n            <CardContent>\n              <Box display=\"flex\" alignItems=\"center\">\n                <NetworkIcon color=\"primary\" sx={{ mr: 2, fontSize: 40 }} />\n                <Box>\n                  <Typography variant=\"h4\" component=\"div\">\n                    {stats?.unique_protease_count || 0}\n                  </Typography>\n                  <Typography color=\"textSecondary\">\n                    Unique Proteases\n                  </Typography>\n                </Box>\n              </Box>\n            </CardContent>\n          </Card>\n        </Grid>\n      </Grid>\n\n      {/* Charts */}\n      <Grid container spacing={3}>\n        <Grid item xs={12} md={6}>\n          <Paper sx={{ p: 3 }}>\n            <Typography variant=\"h6\" gutterBottom>\n              Data Distribution\n            </Typography>\n            <ResponsiveContainer width=\"100%\" height={300}>\n              <PieChart>\n                <Pie\n                  data={pieData}\n                  cx=\"50%\"\n                  cy=\"50%\"\n                  labelLine={false}\n                  label={({ name, percent }) => `${name} ${(percent * 100).toFixed(0)}%`}\n                  outerRadius={80}\n                  fill=\"#8884d8\"\n                  dataKey=\"value\"\n                >\n                  {pieData.map((entry, index) => (\n                    <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\n                  ))}\n                </Pie>\n                <Tooltip />\n              </PieChart>\n            </ResponsiveContainer>\n          </Paper>\n        </Grid>\n\n        <Grid item xs={12} md={6}>\n          <Paper sx={{ p: 3 }}>\n            <Typography variant=\"h6\" gutterBottom>\n              Component Counts\n            </Typography>\n            <ResponsiveContainer width=\"100%\" height={300}>\n              <BarChart data={barData}>\n                <CartesianGrid strokeDasharray=\"3 3\" />\n                <XAxis dataKey=\"name\" />\n                <YAxis />\n                <Tooltip />\n                <Legend />\n                <Bar dataKey=\"count\" fill=\"#1976d2\" />\n              </BarChart>\n            </ResponsiveContainer>\n          </Paper>\n        </Grid>\n      </Grid>\n\n      {/* Quick Actions */}\n      <Paper sx={{ p: 3, mt: 3 }}>\n        <Typography variant=\"h6\" gutterBottom>\n          Quick Actions\n        </Typography>\n        <List>\n          <ListItem>\n            <ListItemIcon>\n              <SearchIcon />\n            </ListItemIcon>\n            <ListItemText \n              primary=\"Search ECM Components\" \n              secondary=\"Find specific ECM components and their properties\"\n            />\n            <Chip label=\"Explore\" color=\"primary\" />\n          </ListItem>\n          <ListItem>\n            <ListItemIcon>\n              <CellIcon />\n            </ListItemIcon>\n            <ListItemText \n              primary=\"View Cell Types\" \n              secondary=\"Explore how different cell types interact with ECM\"\n            />\n            <Chip label=\"View\" color=\"primary\" />\n          </ListItem>\n          <ListItem>\n            <ListItemIcon>\n              <NetworkIcon />\n            </ListItemIcon>\n            <ListItemText \n              primary=\"Network Analysis\" \n              secondary=\"Visualize interaction networks between components\"\n            />\n            <Chip label=\"Analyze\" color=\"primary\" />\n          </ListItem>\n        </List>\n      </Paper>\n    </Box>\n  );\n};\n\nexport default Dashboard; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}