{"ast":null,"code":"import React,{useState,useEffect,useRef}from'react';import{Box,Typography,Paper,FormControl,InputLabel,Select,MenuItem,Card,CardContent,Chip,CircularProgress,Alert}from'@mui/material';import*as d3 from'd3';import{api}from'../utils/api';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const NetworkView=()=>{const[interactions,setInteractions]=useState(null);const[loading,setLoading]=useState(true);const[error,setError]=useState(null);const[networkType,setNetworkType]=useState('ecm_to_cell');const[selectedNode,setSelectedNode]=useState(null);const svgRef=useRef();useEffect(()=>{const fetchInteractions=async()=>{try{const response=await api.get('/api/interactions');setInteractions(response.data);}catch(err){setError('Failed to load interaction data');console.error('Error fetching interactions:',err);}finally{setLoading(false);}};fetchInteractions();},[]);useEffect(()=>{if(!interactions||!svgRef.current)return;const svg=d3.select(svgRef.current);svg.selectAll(\"*\").remove();const width=800;const height=600;// Create nodes and links based on network type\nlet nodes=[];let links=[];if(networkType==='ecm_to_cell'){// ECM components to cell types\nObject.keys(interactions.ecm_to_cell).forEach(ecm=>{nodes.push({id:ecm,group:'ecm',type:'ECM Component'});interactions.ecm_to_cell[ecm].cell_types.forEach(cell=>{if(!nodes.find(n=>n.id===cell)){nodes.push({id:cell,group:'cell',type:'Cell Type'});}links.push({source:ecm,target:cell,type:'interacts_with'});});});}else if(networkType==='protease_network'){// Proteases to their targets\nObject.keys(interactions.protease_network).forEach(protease=>{nodes.push({id:protease,group:'protease',type:'Protease'});interactions.protease_network[protease].forEach(target=>{if(!nodes.find(n=>n.id===target)){nodes.push({id:target,group:'ecm',type:'ECM Component'});}links.push({source:protease,target:target,type:'degrades'});});});}// Create simulation\nconst simulation=d3.forceSimulation(nodes).force(\"link\",d3.forceLink(links).id(d=>d.id).distance(100)).force(\"charge\",d3.forceManyBody().strength(-300)).force(\"center\",d3.forceCenter(width/2,height/2));// Create SVG\nconst g=svg.append(\"g\");// Create links\nconst link=g.append(\"g\").selectAll(\"line\").data(links).enter().append(\"line\").attr(\"stroke\",\"#999\").attr(\"stroke-opacity\",0.6).attr(\"stroke-width\",2);// Create nodes\nconst node=g.append(\"g\").selectAll(\"circle\").data(nodes).enter().append(\"circle\").attr(\"r\",d=>d.group==='ecm'?8:d.group==='cell'?6:5).attr(\"fill\",d=>{switch(d.group){case'ecm':return\"#1976d2\";case'cell':return\"#4caf50\";case'protease':return\"#ff9800\";default:return\"#9e9e9e\";}}).attr(\"stroke\",\"#fff\").attr(\"stroke-width\",2).call(d3.drag().on(\"start\",dragstarted).on(\"drag\",dragged).on(\"end\",dragended));// Add labels\nconst label=g.append(\"g\").selectAll(\"text\").data(nodes).enter().append(\"text\").text(d=>d.id).attr(\"font-size\",\"10px\").attr(\"dx\",12).attr(\"dy\",4).attr(\"fill\",\"#333\");// Add tooltips\nnode.append(\"title\").text(d=>\"\".concat(d.id,\" (\").concat(d.type,\")\"));// Update positions on simulation tick\nsimulation.on(\"tick\",()=>{link.attr(\"x1\",d=>d.source.x).attr(\"y1\",d=>d.source.y).attr(\"x2\",d=>d.target.x).attr(\"y2\",d=>d.target.y);node.attr(\"cx\",d=>d.x).attr(\"cy\",d=>d.y);label.attr(\"x\",d=>d.x).attr(\"y\",d=>d.y);});// Node click handler\nnode.on(\"click\",(event,d)=>{setSelectedNode(d);});// Drag functions\nfunction dragstarted(event,d){if(!event.active)simulation.alphaTarget(0.3).restart();d.fx=d.x;d.fy=d.y;}function dragged(event,d){d.fx=event.x;d.fy=event.y;}function dragended(event,d){if(!event.active)simulation.alphaTarget(0);d.fx=null;d.fy=null;}// Cleanup\nreturn()=>{simulation.stop();};},[interactions,networkType]);if(loading){return/*#__PURE__*/_jsx(Box,{display:\"flex\",justifyContent:\"center\",alignItems:\"center\",minHeight:\"400px\",children:/*#__PURE__*/_jsx(CircularProgress,{})});}if(error){return/*#__PURE__*/_jsx(Alert,{severity:\"error\",sx:{mt:2},children:error});}return/*#__PURE__*/_jsxs(Box,{children:[/*#__PURE__*/_jsx(Typography,{variant:\"h4\",gutterBottom:true,children:\"Interaction Network Visualization\"}),/*#__PURE__*/_jsx(Typography,{variant:\"body1\",color:\"textSecondary\",paragraph:true,children:\"Explore the complex network of interactions between ECM components, cell types, and proteases. Click on nodes to see detailed information.\"}),/*#__PURE__*/_jsx(Box,{sx:{mb:3},children:/*#__PURE__*/_jsxs(FormControl,{sx:{minWidth:200},children:[/*#__PURE__*/_jsx(InputLabel,{children:\"Network Type\"}),/*#__PURE__*/_jsxs(Select,{value:networkType,label:\"Network Type\",onChange:e=>setNetworkType(e.target.value),children:[/*#__PURE__*/_jsx(MenuItem,{value:\"ecm_to_cell\",children:\"ECM to Cell Types\"}),/*#__PURE__*/_jsx(MenuItem,{value:\"protease_network\",children:\"Protease Network\"})]})]})}),/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',gap:3},children:[/*#__PURE__*/_jsxs(Paper,{sx:{p:2,flex:1},children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",gutterBottom:true,children:\"Network Graph\"}),/*#__PURE__*/_jsx(Box,{sx:{border:'1px solid #e0e0e0',borderRadius:1,overflow:'hidden'},children:/*#__PURE__*/_jsx(\"svg\",{ref:svgRef,width:\"800\",height:\"600\",style:{display:'block',margin:'auto'}})}),/*#__PURE__*/_jsxs(Box,{sx:{mt:2},children:[/*#__PURE__*/_jsx(Typography,{variant:\"subtitle2\",gutterBottom:true,children:\"Legend:\"}),/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',gap:2,flexWrap:'wrap'},children:[/*#__PURE__*/_jsx(Chip,{label:\"ECM Components\",size:\"small\",sx:{bgcolor:'#1976d2',color:'white'}}),/*#__PURE__*/_jsx(Chip,{label:\"Cell Types\",size:\"small\",sx:{bgcolor:'#4caf50',color:'white'}}),/*#__PURE__*/_jsx(Chip,{label:\"Proteases\",size:\"small\",sx:{bgcolor:'#ff9800',color:'white'}})]})]})]}),selectedNode&&/*#__PURE__*/_jsx(Card,{sx:{width:300},children:/*#__PURE__*/_jsxs(CardContent,{children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",gutterBottom:true,children:\"Node Details\"}),/*#__PURE__*/_jsxs(Typography,{variant:\"body2\",color:\"textSecondary\",children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Name:\"}),\" \",selectedNode.id]}),/*#__PURE__*/_jsxs(Typography,{variant:\"body2\",color:\"textSecondary\",children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Type:\"}),\" \",selectedNode.type]}),/*#__PURE__*/_jsxs(Typography,{variant:\"body2\",color:\"textSecondary\",children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Group:\"}),\" \",selectedNode.group]}),interactions&&networkType==='ecm_to_cell'&&interactions.ecm_to_cell[selectedNode.id]&&/*#__PURE__*/_jsxs(Box,{sx:{mt:2},children:[/*#__PURE__*/_jsx(Typography,{variant:\"subtitle2\",gutterBottom:true,children:\"Interactions:\"}),/*#__PURE__*/_jsxs(Typography,{variant:\"body2\",color:\"textSecondary\",children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Cell Types:\"}),\" \",interactions.ecm_to_cell[selectedNode.id].cell_types.join(', ')]}),/*#__PURE__*/_jsxs(Typography,{variant:\"body2\",color:\"textSecondary\",children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Receptors:\"}),\" \",interactions.ecm_to_cell[selectedNode.id].receptors.join(', ')]})]}),interactions&&networkType==='protease_network'&&interactions.protease_network[selectedNode.id]&&/*#__PURE__*/_jsxs(Box,{sx:{mt:2},children:[/*#__PURE__*/_jsx(Typography,{variant:\"subtitle2\",gutterBottom:true,children:\"Targets:\"}),/*#__PURE__*/_jsx(Typography,{variant:\"body2\",color:\"textSecondary\",children:interactions.protease_network[selectedNode.id].join(', ')})]})]})})]})]});};export default NetworkView;","map":{"version":3,"names":["React","useState","useEffect","useRef","Box","Typography","Paper","FormControl","InputLabel","Select","MenuItem","Card","CardContent","Chip","CircularProgress","Alert","d3","api","jsx","_jsx","jsxs","_jsxs","NetworkView","interactions","setInteractions","loading","setLoading","error","setError","networkType","setNetworkType","selectedNode","setSelectedNode","svgRef","fetchInteractions","response","get","data","err","console","current","svg","select","selectAll","remove","width","height","nodes","links","Object","keys","ecm_to_cell","forEach","ecm","push","id","group","type","cell_types","cell","find","n","source","target","protease_network","protease","simulation","forceSimulation","force","forceLink","d","distance","forceManyBody","strength","forceCenter","g","append","link","enter","attr","node","call","drag","on","dragstarted","dragged","dragended","label","text","concat","x","y","event","active","alphaTarget","restart","fx","fy","stop","display","justifyContent","alignItems","minHeight","children","severity","sx","mt","variant","gutterBottom","color","paragraph","mb","minWidth","value","onChange","e","gap","p","flex","border","borderRadius","overflow","ref","style","margin","flexWrap","size","bgcolor","join","receptors"],"sources":["/Users/kevin/Cursor/Neural_ECM/src/web/src/components/NetworkView.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport {\n  Box,\n  Typography,\n  Paper,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n  Card,\n  CardContent,\n  Chip,\n  CircularProgress,\n  Alert\n} from '@mui/material';\nimport * as d3 from 'd3';\nimport { api } from '../utils/api';\n\nconst NetworkView = () => {\n  const [interactions, setInteractions] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [networkType, setNetworkType] = useState('ecm_to_cell');\n  const [selectedNode, setSelectedNode] = useState(null);\n  const svgRef = useRef();\n\n  useEffect(() => {\n    const fetchInteractions = async () => {\n      try {\n        const response = await api.get('/api/interactions');\n        setInteractions(response.data);\n      } catch (err) {\n        setError('Failed to load interaction data');\n        console.error('Error fetching interactions:', err);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchInteractions();\n  }, []);\n\n  useEffect(() => {\n    if (!interactions || !svgRef.current) return;\n\n    const svg = d3.select(svgRef.current);\n    svg.selectAll(\"*\").remove();\n\n    const width = 800;\n    const height = 600;\n\n    // Create nodes and links based on network type\n    let nodes = [];\n    let links = [];\n\n    if (networkType === 'ecm_to_cell') {\n      // ECM components to cell types\n      Object.keys(interactions.ecm_to_cell).forEach(ecm => {\n        nodes.push({ id: ecm, group: 'ecm', type: 'ECM Component' });\n        interactions.ecm_to_cell[ecm].cell_types.forEach(cell => {\n          if (!nodes.find(n => n.id === cell)) {\n            nodes.push({ id: cell, group: 'cell', type: 'Cell Type' });\n          }\n          links.push({ source: ecm, target: cell, type: 'interacts_with' });\n        });\n      });\n    } else if (networkType === 'protease_network') {\n      // Proteases to their targets\n      Object.keys(interactions.protease_network).forEach(protease => {\n        nodes.push({ id: protease, group: 'protease', type: 'Protease' });\n        interactions.protease_network[protease].forEach(target => {\n          if (!nodes.find(n => n.id === target)) {\n            nodes.push({ id: target, group: 'ecm', type: 'ECM Component' });\n          }\n          links.push({ source: protease, target: target, type: 'degrades' });\n        });\n      });\n    }\n\n    // Create simulation\n    const simulation = d3.forceSimulation(nodes)\n      .force(\"link\", d3.forceLink(links).id(d => d.id).distance(100))\n      .force(\"charge\", d3.forceManyBody().strength(-300))\n      .force(\"center\", d3.forceCenter(width / 2, height / 2));\n\n    // Create SVG\n    const g = svg.append(\"g\");\n\n    // Create links\n    const link = g.append(\"g\")\n      .selectAll(\"line\")\n      .data(links)\n      .enter().append(\"line\")\n      .attr(\"stroke\", \"#999\")\n      .attr(\"stroke-opacity\", 0.6)\n      .attr(\"stroke-width\", 2);\n\n    // Create nodes\n    const node = g.append(\"g\")\n      .selectAll(\"circle\")\n      .data(nodes)\n      .enter().append(\"circle\")\n      .attr(\"r\", d => d.group === 'ecm' ? 8 : d.group === 'cell' ? 6 : 5)\n      .attr(\"fill\", d => {\n        switch (d.group) {\n          case 'ecm': return \"#1976d2\";\n          case 'cell': return \"#4caf50\";\n          case 'protease': return \"#ff9800\";\n          default: return \"#9e9e9e\";\n        }\n      })\n      .attr(\"stroke\", \"#fff\")\n      .attr(\"stroke-width\", 2)\n      .call(d3.drag()\n        .on(\"start\", dragstarted)\n        .on(\"drag\", dragged)\n        .on(\"end\", dragended));\n\n    // Add labels\n    const label = g.append(\"g\")\n      .selectAll(\"text\")\n      .data(nodes)\n      .enter().append(\"text\")\n      .text(d => d.id)\n      .attr(\"font-size\", \"10px\")\n      .attr(\"dx\", 12)\n      .attr(\"dy\", 4)\n      .attr(\"fill\", \"#333\");\n\n    // Add tooltips\n    node.append(\"title\")\n      .text(d => `${d.id} (${d.type})`);\n\n    // Update positions on simulation tick\n    simulation.on(\"tick\", () => {\n      link\n        .attr(\"x1\", d => d.source.x)\n        .attr(\"y1\", d => d.source.y)\n        .attr(\"x2\", d => d.target.x)\n        .attr(\"y2\", d => d.target.y);\n\n      node\n        .attr(\"cx\", d => d.x)\n        .attr(\"cy\", d => d.y);\n\n      label\n        .attr(\"x\", d => d.x)\n        .attr(\"y\", d => d.y);\n    });\n\n    // Node click handler\n    node.on(\"click\", (event, d) => {\n      setSelectedNode(d);\n    });\n\n    // Drag functions\n    function dragstarted(event, d) {\n      if (!event.active) simulation.alphaTarget(0.3).restart();\n      d.fx = d.x;\n      d.fy = d.y;\n    }\n\n    function dragged(event, d) {\n      d.fx = event.x;\n      d.fy = event.y;\n    }\n\n    function dragended(event, d) {\n      if (!event.active) simulation.alphaTarget(0);\n      d.fx = null;\n      d.fy = null;\n    }\n\n    // Cleanup\n    return () => {\n      simulation.stop();\n    };\n  }, [interactions, networkType]);\n\n  if (loading) {\n    return (\n      <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\" minHeight=\"400px\">\n        <CircularProgress />\n      </Box>\n    );\n  }\n\n  if (error) {\n    return (\n      <Alert severity=\"error\" sx={{ mt: 2 }}>\n        {error}\n      </Alert>\n    );\n  }\n\n  return (\n    <Box>\n      <Typography variant=\"h4\" gutterBottom>\n        Interaction Network Visualization\n      </Typography>\n      \n      <Typography variant=\"body1\" color=\"textSecondary\" paragraph>\n        Explore the complex network of interactions between ECM components, cell types, and proteases.\n        Click on nodes to see detailed information.\n      </Typography>\n\n      <Box sx={{ mb: 3 }}>\n        <FormControl sx={{ minWidth: 200 }}>\n          <InputLabel>Network Type</InputLabel>\n          <Select\n            value={networkType}\n            label=\"Network Type\"\n            onChange={(e) => setNetworkType(e.target.value)}\n          >\n            <MenuItem value=\"ecm_to_cell\">ECM to Cell Types</MenuItem>\n            <MenuItem value=\"protease_network\">Protease Network</MenuItem>\n          </Select>\n        </FormControl>\n      </Box>\n\n      <Box sx={{ display: 'flex', gap: 3 }}>\n        <Paper sx={{ p: 2, flex: 1 }}>\n          <Typography variant=\"h6\" gutterBottom>\n            Network Graph\n          </Typography>\n          <Box sx={{ border: '1px solid #e0e0e0', borderRadius: 1, overflow: 'hidden' }}>\n            <svg\n              ref={svgRef}\n              width=\"800\"\n              height=\"600\"\n              style={{ display: 'block', margin: 'auto' }}\n            />\n          </Box>\n          \n          <Box sx={{ mt: 2 }}>\n            <Typography variant=\"subtitle2\" gutterBottom>\n              Legend:\n            </Typography>\n            <Box sx={{ display: 'flex', gap: 2, flexWrap: 'wrap' }}>\n              <Chip label=\"ECM Components\" size=\"small\" sx={{ bgcolor: '#1976d2', color: 'white' }} />\n              <Chip label=\"Cell Types\" size=\"small\" sx={{ bgcolor: '#4caf50', color: 'white' }} />\n              <Chip label=\"Proteases\" size=\"small\" sx={{ bgcolor: '#ff9800', color: 'white' }} />\n            </Box>\n          </Box>\n        </Paper>\n\n        {selectedNode && (\n          <Card sx={{ width: 300 }}>\n            <CardContent>\n              <Typography variant=\"h6\" gutterBottom>\n                Node Details\n              </Typography>\n              <Typography variant=\"body2\" color=\"textSecondary\">\n                <strong>Name:</strong> {selectedNode.id}\n              </Typography>\n              <Typography variant=\"body2\" color=\"textSecondary\">\n                <strong>Type:</strong> {selectedNode.type}\n              </Typography>\n              <Typography variant=\"body2\" color=\"textSecondary\">\n                <strong>Group:</strong> {selectedNode.group}\n              </Typography>\n              \n              {interactions && networkType === 'ecm_to_cell' && interactions.ecm_to_cell[selectedNode.id] && (\n                <Box sx={{ mt: 2 }}>\n                  <Typography variant=\"subtitle2\" gutterBottom>\n                    Interactions:\n                  </Typography>\n                  <Typography variant=\"body2\" color=\"textSecondary\">\n                    <strong>Cell Types:</strong> {interactions.ecm_to_cell[selectedNode.id].cell_types.join(', ')}\n                  </Typography>\n                  <Typography variant=\"body2\" color=\"textSecondary\">\n                    <strong>Receptors:</strong> {interactions.ecm_to_cell[selectedNode.id].receptors.join(', ')}\n                  </Typography>\n                </Box>\n              )}\n              \n              {interactions && networkType === 'protease_network' && interactions.protease_network[selectedNode.id] && (\n                <Box sx={{ mt: 2 }}>\n                  <Typography variant=\"subtitle2\" gutterBottom>\n                    Targets:\n                  </Typography>\n                  <Typography variant=\"body2\" color=\"textSecondary\">\n                    {interactions.protease_network[selectedNode.id].join(', ')}\n                  </Typography>\n                </Box>\n              )}\n            </CardContent>\n          </Card>\n        )}\n      </Box>\n    </Box>\n  );\n};\n\nexport default NetworkView; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}